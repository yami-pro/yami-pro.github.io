"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[60],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),s=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(a),d=n,h=u["".concat(c,".").concat(d)]||u[d]||m[d]||l;return a?r.createElement(h,i(i({ref:t},p),{},{components:a})):r.createElement(h,i({ref:t},p))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:n,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},69819:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=a(87462),n=(a(67294),a(3905));const l={},i="Scene - Parallax",o={unversionedId:"inspectors/scene/scene-parallax",id:"inspectors/scene/scene-parallax",title:"Scene - Parallax",description:"General",source:"@site/docs/002.inspectors/002.scene/007.scene-parallax.md",sourceDirName:"002.inspectors/002.scene",slug:"/inspectors/scene/scene-parallax",permalink:"/docs/inspectors/scene/scene-parallax",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/002.inspectors/002.scene/007.scene-parallax.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Scene - Particle",permalink:"/docs/inspectors/scene/scene-particle"},next:{title:"Scene - Tilemap",permalink:"/docs/inspectors/scene/scene-tilemap"}},c={},s=[{value:"General",id:"general",level:3},{value:"Parallax",id:"parallax",level:3},{value:"Conditions",id:"conditions",level:3},{value:"Events",id:"events",level:3},{value:"Scripts",id:"scripts",level:3}],p={toc:s};function u(e){let{components:t,...l}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"scene---parallax"},"Scene - Parallax"),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(32462).Z,width:"345",height:"267"})),(0,n.kt)("h3",{id:"general"},"General"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Name\uff1aScene Parallax image name, no real use"),(0,n.kt)("li",{parentName:"ul"},"Image\uff1aImage file"),(0,n.kt)("li",{parentName:"ul"},"Layer\uff1aBackground\u3001Foreground"),(0,n.kt)("li",{parentName:"ul"},'Order\uff1aParallaxes and tilemaps of the same layer are sorted by the "order" property, and when the "order" is equal, they are sorted by the order in which they appear in the scene object list'),(0,n.kt)("li",{parentName:"ul"},"Light",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Raw\uff1aUnaffected by light"),(0,n.kt)("li",{parentName:"ul"},"Global Sampling\uff1aSampling light from multiple pixel locations where the image is located to composite the final color"),(0,n.kt)("li",{parentName:"ul"},"Anchor Sampling\uff1aSampling the light from the anchor position where the image is located to composite the final color"),(0,n.kt)("li",{parentName:"ul"},"Ambient Light\uff1aUse the ambient light of the current scene to composite the final color."))),(0,n.kt)("li",{parentName:"ul"},"Blend\uff1aNormal\u3001Additive\u3001Subtract"),(0,n.kt)("li",{parentName:"ul"},"Opacity\uff1aUsed to adjust the visibility of the parallax image in the scene"),(0,n.kt)("li",{parentName:"ul"},"X\uff1aThe horizontal position of the parallax image in the scene"),(0,n.kt)("li",{parentName:"ul"},"Y\uff1aThe vertical position of the parallax image in the scene")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Parallax images can be used to replace tilemaps.")),(0,n.kt)("p",null,(0,n.kt)("img",{src:a(82587).Z,width:"345",height:"474"})),(0,n.kt)("h3",{id:"parallax"},"Parallax"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Scale X\uff1aHorizontal scaling factor"),(0,n.kt)("li",{parentName:"ul"},"Scale Y\uff1aVertical scaling factor"),(0,n.kt)("li",{parentName:"ul"},"Repeat X\uff1aNumber of horizontal tiling"),(0,n.kt)("li",{parentName:"ul"},"Repeat Y\uff1aNumber of vertical tiling"),(0,n.kt)("li",{parentName:"ul"},"Anchor X\uff1aHorizontal position of the connection point of the parallax (0 ~ 1)"),(0,n.kt)("li",{parentName:"ul"},"Anchor Y\uff1aVertical position of the connection point of the parallax (0 ~ 1)"),(0,n.kt)("li",{parentName:"ul"},"Offset X\uff1aHorizontal offset distance"),(0,n.kt)("li",{parentName:"ul"},"Offset Y\uff1aVertical offset distance"),(0,n.kt)("li",{parentName:"ul"},"Parallax Factor X\uff1aHorizontal distance factor of parallax shift when the camera moves"),(0,n.kt)("li",{parentName:"ul"},"Parallax Factor Y\uff1aVertical distance factor of parallax shift when the camera moves"),(0,n.kt)("li",{parentName:"ul"},"Shift Speed X\uff1aHorizontal speed of parallax texture autoscroll (in pixels/sec)."),(0,n.kt)("li",{parentName:"ul"},"Shift Speed Y\uff1aVertical speed of parallax texture autoscroll (in pixels/sec)."),(0,n.kt)("li",{parentName:"ul"},"Tint - Red\uff1aOriginal color (red) + Tint (red) = Final color (red)"),(0,n.kt)("li",{parentName:"ul"},"Tint - Green\uff1aOriginal color (green) + Tint (green) = Final color (green)"),(0,n.kt)("li",{parentName:"ul"},"Tint - Blue\uff1aOriginal color (blue) + Tint (blue) = Final color (blue)"),(0,n.kt)("li",{parentName:"ul"},"Tint - Grayscale\uff1aGrayscale is the opposite of saturation, the higher the grayscale the lower the saturation")),(0,n.kt)("h3",{id:"conditions"},"Conditions"),(0,n.kt)("p",null,"When loading a scene, the parallax will be created only when the conditions are met, each preset parallax has a self variable that can be saved permanently."),(0,n.kt)("h3",{id:"events"},"Events"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Autorun\uff1aTriggered when the parallax appears in a scene (including after loading savedata)"),(0,n.kt)("li",{parentName:"ul"},'Custom Events\uff1aCustom events can be called via the "Call Event" command')),(0,n.kt)("h3",{id:"scripts"},"Scripts"),(0,n.kt)("p",null,"Add Javascript files to extend this parallax image"))}u.isMDXComponent=!0},32462:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/scene-parallax-1-ee177655b2cc4aff8edfcc6b728cc0b5.png"},82587:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/images/scene-parallax-2-003c4fab05a1229431f99685619c63e2.png"}}]);